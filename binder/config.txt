# Include directories ---------------------------------------------------------

# Clang compiler arguments ----------------------------------------------------
+arg any: -x
+arg any: c++
+arg any: -std=c++17
+arg any: -D__CODE_GENERATOR__
+arg any: -Wno-deprecated-declarations
+arg any: -ferror-limit=0
+arg any: -DOCCGEOMETRY=1
+arg win32: -fms-compatibility
+arg win32: -fms-extensions
+arg win32: -fms-compatibility-version=19
+arg win32: -fdelayed-template-parsing
+arg linux: -D_INC_WINDOWS
+arg linux: -D__WINDOWS_H_INCLUDED

# Immutable types -------------------------------------------------------------

# Excluded modules ------------------------------------------------------------

# Exclude netgen stuff...
-module adtree
-module adfront2
-module adfront3
-module autodiff
-module bisect
-module boundarylayer
-module classifyhpel
-module clusters
-module curvedelems
-module densemat
-module findip
-module geomsearch
-module hprefinement
-module nglib
-module nginterface
-module improve2
-module improve3
-module meshfunc
-module smIdType


# Excluded classes ------------------------------------------------------------
-class ORB_INIT

-class SALOME_Exception
-class DESTRUCTEUR_GENERIQUE_
-class CommException
-class Identity
-class Utils_Mutex
-class Utils_Locker
-class Utils_Timer

-class SMESH_Comment

# VTK stuff needed
-class SMDS_CellLinks
-class SMDS_UnstructuredGrid


-class NETGENPlugin_NetgenLibWrapper

# Undefined typedef? FIXME
-class NETGENPlugin_Remesher_2D

-class NETGENPlugin_Hypothesis_i
-class NETGENPlugin_Hypothesis_2D_i
-class NETGENPlugin_Hypothesis_2D_ONLY_i
-class NETGENPlugin_Hypothesis_3D_i
-class NETGENPlugin_NETGEN_2D3D_i
-class NETGENPlugin_NETGEN_2D_i
-class NETGENPlugin_NETGEN_2D_ONLY_i
-class NETGENPlugin_NETGEN_3D_i
-class NETGENPlugin_SimpleHypothesis_2D_i
-class NETGENPlugin_SimpleHypothesis_3D_i
-class NETGENPlugin_Remesher_2D_i
-class NETGENPlugin_RemesherHypothesis_2D_i

# Excluded typedefs -----------------------------------------------------------
-typedef TBlockShapes


# Excluded functions ----------------------------------------------------------
-function* operator new_
-function* operator delete_
-function* operator new[]_
-function* operator delete[]_
-function* operator=
-function* operator->
-function* begin
-function* end
-function* cbegin
-function* cend

-function SMDS_MeshCell::toVtkOrder_
-function SMDS_MeshCell::fromVtkOrder_
-function SMDS_CellLinks::BuildLinks

# TODO: Cannot handle ptr to ptr return type/params?
-function SMDS_VolumeTool::IsFreeFace
-function SMDS_VolumeTool::IsFreeFaceAdv
-function SMDS_VolumeTool::GetFaceNodes
-function SMDS_VolumeTool::GetNodes

-function StdMeshers_RenumberHelper::AddReplacingNode
-function StdMeshers_Import_1D::getMaps_

# Abstract
-function SMDS_PolygonalFaceOfNodes::SMDS_PolygonalFaceOfNodes(const int &)
-function StdMeshers_Reversible1D::StdMeshers_Reversible1D(int, SMESH_Gen *)

-function SMESH_Quadtree::SMESH_Quadtree()
-function SMESH_Quadtree::SMESH_Quadtree(SMESH_TreeLimit *)
-function SMESH_Octree::SMESH_Octree(SMESH_TreeLimit *)

-function SMESH_ProxyMesh::SMESH_ProxyMesh(int &)
-function SMESH_0D_Algo::SMESH_0D_Algo(int, SMESH_Gen *)
-function SMESH_1D_Algo::SMESH_1D_Algo(int, SMESH_Gen *)
-function SMESH_2D_Algo::SMESH_2D_Algo(int, SMESH_Gen *)
-function SMESH_3D_Algo::SMESH_3D_Algo(int, SMESH_Gen *)

-function SMESH_MeshEditor::Transform
-function SMESH_MeshEditor::Offset
-function SMESH_Pattern::GetInOutNodes

-function SMESH_subMesh::DependsOn()

-function StdMeshers_FaceSide::StdMeshers_FaceSide(const TopoDS_Face &, const int &, SMESH_Mesh *, const bool, const bool, SMESH_MesherHelper *)
-function StdMeshers_FaceSide::StdMeshers_FaceSide(const TopoDS_Face &, const int &, SMESH_Mesh *, const bool, const bool, SMESH_MesherHelper *, SMESH_ProxyMesh::Ptr)

-function StdMeshers_ShapeShapeBiDirectionMap::operator()


-function NETGENPlugin_NetgenLibWrapper::_ngMesh
-function NETGENPlugin_NetgenLibWrapper::setMesh
-function NETGENPlugin_Mesher::SetSelfPointer

# Headers ---------------------------------------------------------------------
+header SMESH: bind_NCollection_Sequence.hxx
+header SMESH: bind_NCollection_Map.hxx
+header SMESH: SMESH_ControlsDef.hxx

+header SMESHDS: bind_NCollection_DataMap.hxx

+header SMDS: vtkType.h
+header SMDS: vtkCellLinks.h
+header SMDS: vtkCellType.h
+header SMDS: vtkDataSet.h
+header SMDS: vtkUnstructuredGrid.h
+header SMDS: vtkPoints.h
+header SMDS: bind__ChunkIterator.hxx
+header SMDS: bind_SMDS_VtkCellIterator.hxx
+header SMDS: bind_SMDS_VtkCellIteratorPolyH.hxx
+header SMDS: bind_SMDS_VtkCellIteratorToUNV.hxx

+header StdMeshers: bind_NCollection_IndexedMap.hxx
+header StdMeshers: SMESH_Group.hxx

+header NETGENPlugin: SMESH_subMesh.hxx
-header NETGENPlugin: NETGENPlugin_Hypothesis_i.hxx
-header NETGENPlugin: NETGENPlugin_Hypothesis_2D_i.hxx
-header NETGENPlugin: NETGENPlugin_Hypothesis_2D_ONLY_i.hxx
-header NETGENPlugin: NETGENPlugin_Hypothesis_3D_i.hxx
-header NETGENPlugin: NETGENPlugin_NETGEN_2D3D_i.hxx
-header NETGENPlugin: NETGENPlugin_NETGEN_2D_i.hxx
-header NETGENPlugin: NETGENPlugin_NETGEN_2D_ONLY_i.hxx
-header NETGENPlugin: NETGENPlugin_NETGEN_3D_i.hxx
-header NETGENPlugin: NETGENPlugin_SimpleHypothesis_2D_i.hxx
-header NETGENPlugin: NETGENPlugin_SimpleHypothesis_3D_i.hxx


-header Utils: Utils_DESTRUCTEUR_GENERIQUE.hxx
-header Utils: Utils_Identity.hxx
-header Utils: Utils_Mutex.hxx
-header Utils: Utils_ORB_INIT.hxx
-header Utils: Utils_Timer.hxx

# Python names ----------------------------------------------------------------

# nodelete option -------------------------------------------------------------


# Excluded base classes -------------------------------------------------------

# Excluded fields -------------------------------------------------------------
-field NETGENPlugin_NetgenLibWrapper::_ngMesh
-field _ChunkIterator::myElement
-field _ChunkIterator::myRanges

# Excluded imports ------------------------------------------------------------
-import SMDS: SMESHDS
-import SMESH: StdMeshers

# Wtf??
-import NETGENPlugin: meshclass

# Import guards ---------------------------------------------------------------
+iguard SMESHDS: SMESH

# Call guards -----------------------------------------------------------------

# Nested classes --------------------------------------------------------------

# Classes that need downcasted  -----------------------------------------------

# Skipped types ---------------------------------------------------------------

# Return value policies -------------------------------------------------------
+return_policy DriverUNV_R_SMDS_Mesh::GetGroupNamesMap-->reference_internal


+return_policy NETGENPlugin_RemesherHypothesis_2D::GetFixedEdgeGroup-->reference_internal
+return_policy NETGENPlugin_Internals::getMesh-->reference_internal
+return_policy NETGENPlugin_Internals::getEdgesAndVerticesWithFaces-->reference_internal
+return_policy NETGENPlugin_Internals::getFacesWithVertices-->reference_internal
+return_policy NETGENPlugin_Internals::getSolidsWithVertices-->reference_internal

+return_policy SMESH_MeshVSLink::GetAllNodes-->reference_internal
+return_policy SMESH_MeshVSLink::GetAllElements-->reference_internal
+return_policy SMESH_MeshVSLink::FindElement-->reference_internal
+return_policy SMESH_MeshVSLink::FindNode-->reference_internal

+return_policy SMESH_Gen::GetCurrentSubMesh-->reference_internal
+return_policy SMESH_Gen::GetStudyContext-->reference_internal
+return_policy SMESH_Gen::GetAlgo-->reference_internal

+return_policy SMESH_Mesh::FindMesh-->reference_internal
#+return_policy SMESH_Mesh::GetShapeToMesh-->reference_internal
+return_policy SMESH_Mesh::GetHypothesis-->reference_internal
+return_policy SMESH_Mesh::GetSubMesh-->reference_internal
+return_policy SMESH_Mesh::GetSubMeshContaining-->reference_internal
+return_policy SMESH_Mesh::GetMeshDS-->reference_internal
+return_policy SMESH_Mesh::GetGen-->reference_internal
+return_policy SMESH_Mesh::GetGroup-->reference_internal

+return_policy SMESH_Algo::GetCompatibleHypoFilter-->reference_internal

+return_policy SMDS_ElementFactory::FindElement-->reference_internal
+return_policy SMDS_NodeFactory::FindNode-->reference_internal
+return_policy SMDS_FaceOfNodes::GetNode-->reference_internal
+return_policy SMDS_LinearEdge::GetNode-->reference_internal

+return_policy SMDS_ElementChunk::Element-->reference_internal
+return_policy SMDS_ElementChunk::GetPositionPtr-->reference_internal
+return_policy SMDS_ElementChunk::GetUsedRanges-->reference_internal
+return_policy SMDS_ElementChunk::GetUsedRangesMinMax-->reference_internal
+return_policy SMDS_ElementChunk::GetSubIDRangesMinMax-->reference_internal
+return_policy SMDS_ElementChunk::GetMesh-->reference_internal

+return_policy SMDS_Mesh::GetGrid-->reference_internal
+return_policy SMDS_Mesh::AddSubMesh-->reference_internal
+return_policy SMDS_Mesh::AddNodeWithID-->reference_internal
+return_policy SMDS_Mesh::AddNode-->reference_internal
+return_policy SMDS_Mesh::Add0DElementWithID-->reference_internal
+return_policy SMDS_Mesh::Add0DElement-->reference_internal
+return_policy SMDS_Mesh::AddBallWithID-->reference_internal
+return_policy SMDS_Mesh::AddBall-->reference_internal
+return_policy SMDS_Mesh::AddEdgeWithID-->reference_internal
+return_policy SMDS_Mesh::AddEdge-->reference_internal
+return_policy SMDS_Mesh::AddFaceWithID-->reference_internal
+return_policy SMDS_Mesh::AddFace-->reference_internal
+return_policy SMDS_Mesh::AddVolumeWithID-->reference_internal
+return_policy SMDS_Mesh::AddVolume-->reference_internal
+return_policy SMDS_Mesh::AddPolygonalFaceWithID-->reference_internal
+return_policy SMDS_Mesh::AddPolygonalFace-->reference_internal
+return_policy SMDS_Mesh::AddPolyhedralVolumeWithID-->reference_internal
+return_policy SMDS_Mesh::AddPolyhedralVolume-->reference_internal
+return_policy SMDS_Mesh::AddVolumeFromVtkIds-->reference_internal
+return_policy SMDS_Mesh::AddFaceFromVtkIds-->reference_internal
+return_policy SMDS_Mesh::FindNode-->reference_internal
+return_policy SMDS_Mesh::FindNodeVtk-->reference_internal
+return_policy SMDS_Mesh::FindElementVtk-->reference_internal
+return_policy SMDS_Mesh::FindElement-->reference_internal
+return_policy SMDS_Mesh::Find0DElement-->reference_internal
+return_policy SMDS_Mesh::FindBall-->reference_internal
+return_policy SMDS_Mesh::FindEdge-->reference_internal
+return_policy SMDS_Mesh::FindFace-->reference_internal
+return_policy SMDS_Mesh::GetMeshInfo-->reference_internal

+return_policy SMDS_MeshElement::GetNode-->reference_internal
+return_policy SMDS_MeshElement::GetNodeWrap-->reference_internal
+return_policy SMDS_MeshElement::GetMesh-->reference_internal

+return_policy SMDS_MeshGroup::GetMesh-->reference_internal
+return_policy SMDS_MeshNode::GetNode-->reference_internal
+return_policy SMDS_MeshVolume::GetNode-->reference_internal
+return_policy SMDS_MeshVolume::GetFaceNode-->reference_internal
+return_policy SMDS_PolygonalFaceOfNodes::GetNode-->reference_internal
+return_policy SMDS_UnstructuredGrid::extrudeVolumeFromFace-->reference_internal
+return_policy SMDS_UnstructuredGrid::GetLinks-->reference_internal
+return_policy SMDS_UnstructuredGrid::getDownArray-->reference_internal

+return_policy SMDS_VolumeOfNodes::GetNode-->reference_internal
+return_policy SMDS_VolumeTool::Element-->reference_internal
+return_policy SMDS_VolumeTool::GetNodes-->reference_internal
+return_policy SMDS_VolumeTool::GetFaceNodes-->reference_internal


# TODO: Need shared ptr?
#+return_policy SMESH_Mesh::AddGroup-->reference_internal

# +return_policy _ChunkIterator::more-->reference

# Keep alive -----------------------------------------------------------------

# Keep mesh alive while driver exists
+keep_alive Driver_SMDS_Mesh::SetMesh-->2, 1
+keep_alive Driver_SMESHDS_Mesh::SetMesh-->2, 1

+keep_alive DriverMED_Family::AddElement-->2, 1
+keep_alive DriverMED_W_Field::Set-->1, 2
+keep_alive DriverMED_W_SMESHDS_Mesh::AddGroup-->2, 1
+keep_alive DriverMED_W_SMESHDS_Mesh::AddSubMesh-->2, 1
+keep_alive DriverUNV_W_SMDS_Mesh::AddGroup-->2, 1


+keep_alive NETGENPlugin_Mesher::NETGENPlugin_Mesher-->2, 1
+keep_alive NETGENPlugin_Mesher::SetParameters-->2, 1
+keep_alive NETGENPlugin_Internals::NETGENPlugin_Internals-->2, 1


# Keep mesh alive
+keep_alive SMDS_ElementHolder::SMDS_ElementHolder-->2, 1
+keep_alive SMDS_ElementHolder::add-->2, 1
+keep_alive SMDS_ElementFactory::SMDS_ElementFactory-->2, 1
+keep_alive SMDS_ElementFactory::NewElement-->0, 1
+keep_alive SMDS_ElementFactory::NewCell-->0, 1
+keep_alive SMDS_NodeFactory::NewNode-->0, 1
+keep_alive SMDS_ElementChunk::SMDS_ElementChunk-->2, 1
+keep_alive SMDS_MeshGroup::SMDS_MeshGroup-->2, 1
+keep_alive SMDS_MeshGroup::Add-->2, 1

+keep_alive SMESH_MeshVSLink::SMESH_MeshVSLink-->2, 1
+keep_alive SMESH_MeshVSLink::SMESH_MeshVSLink(const SMESH_Mesh *aMesh, const SMESH_Group *aGroup)-->1, 2, 3

# TODO: Keep all parameters alive???
+keep_alive SMDS_FaceOfNodes::SMDS_FaceOfNodes-->2, 1
+keep_alive SMDS_FaceOfNodes::ChangeNodes-->2, 1
+keep_alive SMDS_LinearEdge::SMDS_LinearEdge-->2, 1
+keep_alive SMDS_LinearEdge::ChangeNodes-->2, 1
+keep_alive SMDS_VolumeTool::SMDS_VolumeTool-->2, 1
+keep_alive SMDS_VolumeTool::Set-->2, 1

# Add keep alive call policy to ensure that MESH_Gen stays alive until
# the mesh is deleted
+keep_alive SMESH_Gen::CreateMesh-->0, 1
+keep_alive uvPtStruct::uvPtStruct(const SMDS_MeshNode *)-->1, 0


+patch NETGENPlugin: py::arg("gen"));-->py::arg("gen"), py::keep_alive<3, 1>());
+patch SMESH: py::arg("gen"));-->py::arg("gen"), py::keep_alive<3, 1>());
+patch StdMeshers: py::arg("gen"));-->py::arg("gen"), py::keep_alive<3, 1>());


# Manual text -----------------------------------------------------------------

# Extra text ------------------------------------------------------------------
+before_type Unexpect-->py::register_exception<SALOME_Exception>(mod, "PySALOME_Exception");

# HACK: Workaround EventListener duplicated.. Why is EventListner jacked up??
+after_type SMESH_MesherHelper-->/*
+before_type SMESH_subMesh-->*/

#
+after_type SMDS_Mesh-->bind__ChunkIterator<SMDS_ElemIterator, TUsedRangeSet>(mod, "SMDS_Iterator_ElemChunkUsedRange", py::module_local(false));
+after_type SMDS_Mesh-->bind__ChunkIterator<SMDS_NodeIterator, TUsedRangeSet>(mod, "SMDS_Iterator_NodeChunkUsedRange", py::module_local(false));
+after_type SMDS_Mesh-->bind__ChunkIterator<SMDS_0DElementIterator, TUsedRangeSet>(mod, "SMDS_Iterator_0DElementChunkUsedRange", py::module_local(false));
+after_type SMDS_Mesh-->bind__ChunkIterator<SMDS_EdgeIterator, TUsedRangeSet>(mod, "SMDS_Iterator_FaceChunkUsedRange", py::module_local(false));
+after_type SMDS_Mesh-->bind__ChunkIterator<SMDS_FaceIterator, TUsedRangeSet>(mod, "SMDS_Iterator_EdgeChunkUsedRange", py::module_local(false));
+after_type SMDS_Mesh-->bind__ChunkIterator<SMDS_VolumeIterator, TUsedRangeSet>(mod, "SMDS_Iterator_VolumeChunkUsedRange", py::module_local(false));

+after_type SMDS_Mesh-->bind__ChunkIterator<SMDS_ElemIterator, TSubIDRangeSet>(mod, "SMDS_Iterator_ElemSubIDChunkSubID", py::module_local(false));
+after_type SMDS_Mesh-->bind__ChunkIterator<SMDS_NodeIterator, TSubIDRangeSet>(mod, "SMDS_Iterator_NodeSubIDChunkSubID", py::module_local(false));
+after_type SMDS_Mesh-->bind__ChunkIterator<SMDS_0DElementIterator, TSubIDRangeSet>(mod, "SMDS_Iterator_0DElementChunkSubID", py::module_local(false));
+after_type SMDS_Mesh-->bind__ChunkIterator<SMDS_EdgeIterator, TSubIDRangeSet>(mod, "SMDS_Iterator_FaceChunkSubID", py::module_local(false));
+after_type SMDS_Mesh-->bind__ChunkIterator<SMDS_FaceIterator, TSubIDRangeSet>(mod, "SMDS_Iterator_EdgeChunkSubID", py::module_local(false));
+after_type SMDS_Mesh-->bind__ChunkIterator<SMDS_VolumeIterator, TSubIDRangeSet>(mod, "SMDS_Iterator_VolumeChunkSubID", py::module_local(false));

+after_type SMDS_MeshCell-->bind_SMDS_VtkCellIterator<SMDS_ElemIterator>(mod, "SMDS_VtkCellIterator_Elem", py::module_local(false));
+after_type SMDS_MeshCell-->bind_SMDS_VtkCellIterator<SMDS_NodeIterator>(mod, "SMDS_VtkCellIterator_Node", py::module_local(false));

+after_type SMDS_MeshVolume-->bind_SMDS_VtkCellIterator<SMDS_ElemIterator, _GetVtkNodesPolyh>(mod, "SMDS_VtkCellIterator_ElemPolyh", py::module_local(false));
+after_type SMDS_MeshVolume-->bind_SMDS_VtkCellIterator<SMDS_NodeIterator, _GetVtkNodesPolyh>(mod, "SMDS_VtkCellIterator_NodePolyh", py::module_local(false));
+after_type SMDS_MeshVolume-->bind_SMDS_VtkCellIteratorPolyH<SMDS_ElemIterator>(mod, "SMDS_VtkCellIteratorPolyH_Elem", py::module_local(false));
+after_type SMDS_MeshVolume-->bind_SMDS_VtkCellIteratorPolyH<SMDS_NodeIterator>(mod, "SMDS_VtkCellIteratorPolyH_Node", py::module_local(false));

#+after_type SMDS_Mesh-->bind_SMDS_VtkCellIteratorToUNV<SMDS_NodeIterator>(mod, "SMDS_VtkCellIteratorToUNV_Node", py::module_local(false));
#+after_type SMDS_Mesh-->bind_SMDS_SetIterator<SMDS_ElementVectorIterator>(mod, "SMDS_ElementVectorIterator", py::module_local(false));

# Patches -----------------------------------------------------------------
+patch DriverUNV: bind_std::map<SMDS_MeshGroup *, std::basic_string<char>>-->py::bind_map<std::map<SMDS_MeshGroup *, std::basic_string<char>>>
+patch DriverUNV: bind_std::list<SMESHDS_GroupBase *>-->// fixme // py::bind_vector<std::list<SMESHDS_GroupBase *>>

+patch SMDS: bind_boost::shared_ptr-->// fixme // bind_boost::shared_ptr
+patch SMDS: cls_ElemByNodesType.def_readwrite-->// fixme // cls_ElemByNodesType.def_readwrite
+patch SMDS: cls_ListElemByNodesType.def_readwrite-->// fixme // cls_ListElemByNodesType.def_readwrite
+patch SMDS: py::class_<> cls_ElemByNodesType-->py::class_<std::unique_ptr<ElemByNodesType, Deleter<ElemByNodesType>>> cls_ElemByNodesType
+patch SMDS: py::class_<> cls_ListElemByNodesType-->py::class_<std::unique_ptr<ListElemByNodesType, Deleter<ListElemByNodesType>>> cls_ListElemByNodesType

+patch SMESH: bind_boost::shared_ptr-->// fixme // bind_boost::shared_ptr
+patch SMESH: bind_std::pair-->// fixme // bind_std::pair
+patch SMESHDS: bind_boost::shared_ptr-->// fixme // bind_boost::shared_ptr
+patch StdMeshers: bind_boost::shared_ptr-->// fixme // bind_boost::shared_ptr

# TODO: define custom holder type, patch to add boost::shared_ptr holder
+patch bind_SMDS_Iterator: py::class_<SMDS_Iterator<VALUE>>-->py::class_<SMDS_Iterator<VALUE>, boost::shared_ptr<SMDS_Iterator<VALUE>>>
+patch bind__ChunkIterator: py::class_<_ChunkIterator<ELEM_ITERATOR, RANGE_SET>, ELEM_ITERATOR>-->py::class_<_ChunkIterator<ELEM_ITERATOR, RANGE_SET>, boost::shared_ptr<_ChunkIterator<ELEM_ITERATOR, RANGE_SET>>, ELEM_ITERATOR>
+patch bind_SMDS_VtkCellIterator: py::class_<SMDS_VtkCellIterator<SMDS_ITERATOR, GET_VTK_NODES>-->py::class_<SMDS_VtkCellIterator<SMDS_ITERATOR, GET_VTK_NODES>, boost::shared_ptr<SMDS_VtkCellIterator<SMDS_ITERATOR, GET_VTK_NODES>>
+patch bind_SMDS_VtkCellIteratorPolyH: py::class_<SMDS_VtkCellIteratorPolyH<SMDS_ITERATOR>-->py::class_<SMDS_VtkCellIteratorPolyH<SMDS_ITERATOR>,  boost::shared_ptr<SMDS_VtkCellIteratorPolyH<SMDS_ITERATOR>>
+patch bind_SMDS_VtkCellIteratorToUNV: py::class_<SMDS_VtkCellIteratorToUNV<SMDS_ITERATOR>-->py::class_<SMDS_VtkCellIteratorToUNV<SMDS_ITERATOR>, boost::shared_ptr<SMDS_VtkCellIteratorToUNV<SMDS_ITERATOR>>


# Disable constructors/fields that don't work
+patch bind__ChunkIterator: cls__ChunkIterator.def(py::init-->// patched out // cls__ChunkIterator.def(py::init
+patch bind__ChunkIterator: cls__ChunkIterator.def_readwrite-->// patched out // cls__ChunkIterator.def_readwrite

# TODO: Support rv policy for binder?
+patch bind__ChunkIterator: &_ChunkIterator<ELEM_ITERATOR, RANGE_SET>::next, "None");-->&_ChunkIterator<ELEM_ITERATOR, RANGE_SET>::next, "None", py::return_value_policy::reference);
